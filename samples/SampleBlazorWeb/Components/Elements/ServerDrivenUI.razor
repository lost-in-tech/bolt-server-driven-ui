@using Bolt.ServerDrivenUI.Core
@using Bolt.ServerDrivenUI.Core.Elements
@inject IHttpClientFactory clientFactory;
@inject Bolt.Polymorphic.Serializer.Json.IJsonOptionsProvider jsonOptionsProvider;

@if (_screen?.Layouts != null)
{
    if (_screen.Layouts.TryGetValue("wide", out var wideLayout))
    {
        var sections = new Dictionary<string, IElement>();
        foreach (var screenSection in _screen.Sections)
        {
            sections[screenSection.Name] = screenSection.Element;
        }
        
        <RenderElement Element=@wideLayout.Element Sections=@sections/>
    }
}
else
{
    <div>Loading screen</div>
}

@code {
    private Screen? _screen;
    
    protected override async Task OnInitializedAsync()
    {
        var client = clientFactory.CreateClient(ServiceName);
        var screen = await client.GetFromJsonAsync<Screen>( RequestPath, jsonOptionsProvider.Get());
        _screen = screen;
    }

    [Parameter]
    public required string RequestPath { get; set; }
    
    [Parameter]
    public required string ServiceName { get; set; }
}